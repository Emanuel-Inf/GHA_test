name: Beispiel Workflow mit JSON-Output

on:
  push:
    branches:
      - main

jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      json_data: ${{ steps.create_json.outputs.json }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Erstelle JSON-Datei als String
        id: create_json
        run: |
          echo '{"key1":["value1", "value2", "value3"], "key2":["value4", "value5"]}' > data.json
          echo "::set-output name=json::$(cat data.json)"

  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Nutze das JSON Output von Job1
        run: |
          echo "Empfangenes JSON:"
          echo "${{ needs.job1.outputs.json_data }}"
          
          # Optional: Umwandlung des JSON-Outputs in ein Shell-Objekt (z.B. mit jq)
          echo "${{ needs.job1.outputs.json_data }}" > data.json
          cat data.json
